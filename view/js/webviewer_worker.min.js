/*!
 * RCRS Web Viewer v0.2.1602593430189
 * https://github.com/roborescue/rcrs-web-viewer
 * 
 * Released under the BSD-3-Clause license
 * https://opensource.org/licenses/BSD-3-Clause
 *
 * Date: 2020-10-13T12:50:30.189Z (Tue, 13 Oct 2020 12:50:30 GMT)
 */
const DRAW_BORDER_LINE=!0,DRAW_BORDER_LINE_WIDTH=50,DRAW_AGENT_CIRCLE_RADIUS=1500,DRAW_CIVILIAN_CIRCLE_RADIUS=1200,DRAW_AGENT_CIRCLE_CUTS=15,COMMAND_EXTINGUISH_LINE_WIDTH=50,COMMAND_MOVEHISTORY_LINE_WIDTH=50,COMMAND_CLEARAREA_LINE_WIDTH=50,COMMAND_CLEARAREA_CLEARWIDTH=2e3,COMMAND_CLEARAREA_CLEARLENGTH=1e4,COMMAND_RESCUE_MARGIN=300,COMMAND_RESCUE_CUTS=13,ENTITY_NAME_CIVILIAN="Civilian",ENTITY_NAME_AMBULANCE_TEAM="Ambulance team",ENTITY_NAME_FIRE_BRIGADE="Fire brigade",ENTITY_NAME_POLICE_FORCE="Police force",ENTITY_NAME_BLOCKADE="Blockade",ENTITY_NAME_HYDRANT="Hydrant",ENTITY_NAME_ROAD="Road",ENTITY_NAME_REFUGE="Refuge",ENTITY_NAME_BUILDING="Building",ENTITY_NAME_GAS_STATION="Gas Station",ENTITY_NAME_AMBULANCE_CENTRE="Ambulance centre",ENTITY_NAME_FIRE_STATION="Fire station",ENTITY_NAME_POLICE_OFFICE="Police office",ENTITY_ATTR_ID="Id",ENTITY_ATTR_ENTITY_NAME="EntityName",ENTITY_ATTR_HP="urn:rescuecore2.standard:property:hp",ENTITY_ATTR_FIERYNESS="urn:rescuecore2.standard:property:fieryness",ENTITY_ATTR_APEXES="urn:rescuecore2.standard:property:apexes",ENTITY_ATTR_POSITION="urn:rescuecore2.standard:property:position",ENTITY_ATTR_POSITIONHISTORY="urn:rescuecore2.standard:property:positionhistory",COMMAND_EXTINGUISH="urn:rescuecore2.standard:message:extinguish",COMMAND_CLEAR="urn:rescuecore2.standard:message:clear",COMMAND_CLEARAREA="urn:rescuecore2.standard:message:clear_area",COMMAND_RESCUE="urn:rescuecore2.standard:message:rescue",SETTING_ICON_RADIUS=7e3,WORKER_COMMAND_LOADDATA="load_data",WORKER_COMMAND_IMPORTSCRIPT="import_script",WORKER_COMMAND_SETICONS="sync_icons",WORKER_COMMAND_PROGRESSREPORT="progress_report",WORKER_COMMAND_MAPBOUNDS="map_bounds",WORKER_COMMAND_CYCLEDATA="cycle_data",WORKER_COMMAND_INFO="info",WORKER_COMMAND_BASEDATA="base_data",HUMAN_HP_MAX=1e4,HUMAN_HP_INJURED=7500,HUMAN_HP_CRITICAL=1e3,COLOR_HUMAN_TYPE_CIVILIAN=[0,1,0],COLOR_HUMAN_TYPE_FIRE_BRIGADE=[1,0,0],COLOR_HUMAN_TYPE_AMBULANCE_TEAM=[1,1,1],COLOR_HUMAN_TYPE_POLICE_FORCE=[0,0,1],COLOR_HUMAN_TYPE_DEAD=[0,0,0],COLOR_ROAD_DEFAULT=[.72,.72,.72],COLOR_BLOCKADE_DEFAULT=[0,0,0],COLOR_BORDER_DEFAULT=[0,0,0],COLOR_COMMAND_EXTINGUISH=[.2,.2,1],COLOR_COMMAND_MOVEHISTORY=[1,0,0],COLOR_COMMAND_CLEARAREA=[.4,.4,1],COLOR_COMMAND_RESCUE=[.9,.9,.9],COLOR_BUILDING_FIERYNESS_UNBURNT=[.52,.52,.52],COLOR_BUILDING_FIERYNESS_HEATING=[.69,.69,.21],COLOR_BUILDING_FIERYNESS_BURNING=[.8,.47,.19],COLOR_BUILDING_FIERYNESS_INFERNO=[.62,.2,.2],COLOR_BUILDING_FIERYNESS_WATER_DAMAGE=[.19,.47,.51],COLOR_BUILDING_FIERYNESS_MINOR_DAMAGE=[.39,.54,.82],COLOR_BUILDING_FIERYNESS_MODERATE_DAMAGE=[.39,.27,.74],COLOR_BUILDING_FIERYNESS_SEVERE_DAMAGE=[.31,.23,.54],COLOR_BUILDING_FIERYNESS_BURNT_OUT=[0,0,0];function Entity(t){Object.assign(this,t),"Id"in t&&(this.Id=parseInt(t.Id)),"EntityName"in t&&(this.EntityName=t.EntityName.trim()),ENTITY_ATTR_HP in t&&(this[ENTITY_ATTR_HP]=parseInt(t[ENTITY_ATTR_HP])),ENTITY_ATTR_FIERYNESS in t&&(this[ENTITY_ATTR_FIERYNESS]=parseInt(t[ENTITY_ATTR_FIERYNESS]))}EntityColor={},EntityColor.getDarker=function(t){return[t[0]/2,t[1]/2,t[2]/2]},EntityColor.getBuildingColor=function(t){switch(t){case 0:return COLOR_BUILDING_FIERYNESS_UNBURNT;case 1:return COLOR_BUILDING_FIERYNESS_HEATING;case 2:return COLOR_BUILDING_FIERYNESS_BURNING;case 3:return COLOR_BUILDING_FIERYNESS_INFERNO;case 4:return COLOR_BUILDING_FIERYNESS_WATER_DAMAGE;case 5:return COLOR_BUILDING_FIERYNESS_MINOR_DAMAGE;case 6:return COLOR_BUILDING_FIERYNESS_MODERATE_DAMAGE;case 7:return COLOR_BUILDING_FIERYNESS_SEVERE_DAMAGE;case 8:return COLOR_BUILDING_FIERYNESS_BURNT_OUT}return COLOR_BUILDING_FIERYNESS_UNBURNT},EntityColor.getHumanColor=function(t,e){if(0==e)return COLOR_HUMAN_TYPE_DEAD;let i;switch(t){case"Civilian":i=COLOR_HUMAN_TYPE_CIVILIAN;break;case"Fire brigade":i=COLOR_HUMAN_TYPE_FIRE_BRIGADE;break;case"Ambulance team":i=COLOR_HUMAN_TYPE_AMBULANCE_TEAM;break;case"Police force":i=COLOR_HUMAN_TYPE_POLICE_FORCE}return e<1e3&&(i=this.getDarker(i)),e<7500&&(i=this.getDarker(i)),e<1e4&&(i=this.getDarker(i)),i},EntityColor.getColor=function(t){return EntityHandler.isRoad(t)?COLOR_ROAD_DEFAULT:EntityHandler.isBuilding(t)?this.getBuildingColor(t[ENTITY_ATTR_FIERYNESS]):EntityHandler.isBlockade(t)?COLOR_BLOCKADE_DEFAULT:EntityHandler.isHuman(t)?this.getHumanColor(EntityHandler.getType(t),EntityHandler.getHP(t)):[0,0,0]};var EntityHandler={};function getKeyFromColor(t){return t[0]+" "+t[1]+" "+t[2]+" 1"}function OrdinalHistorian(){let t=new Historian;return t.addKey(getKeyFromColor(COLOR_ROAD_DEFAULT)),t.addKey(getKeyFromColor(COLOR_BUILDING_FIERYNESS_UNBURNT)),t.addKey(getKeyFromColor(COLOR_BUILDING_FIERYNESS_HEATING)),t.addKey(getKeyFromColor(COLOR_BUILDING_FIERYNESS_BURNING)),t.addKey(getKeyFromColor(COLOR_BUILDING_FIERYNESS_INFERNO)),t.addKey(getKeyFromColor(COLOR_BUILDING_FIERYNESS_WATER_DAMAGE)),t.addKey(getKeyFromColor(COLOR_BUILDING_FIERYNESS_MINOR_DAMAGE)),t.addKey(getKeyFromColor(COLOR_BUILDING_FIERYNESS_MODERATE_DAMAGE)),t.addKey(getKeyFromColor(COLOR_BUILDING_FIERYNESS_SEVERE_DAMAGE)),t.addKey(getKeyFromColor(COLOR_BUILDING_FIERYNESS_BURNT_OUT)),t.addKey(getKeyFromColor(COLOR_BLOCKADE_DEFAULT)),t.addKey(getKeyFromColor(COLOR_BORDER_DEFAULT)),t.addKey(getKeyFromColor(COLOR_COMMAND_MOVEHISTORY)),t.addKey(getKeyFromColor(COLOR_COMMAND_CLEARAREA)),t.addKey(getKeyFromColor(COLOR_COMMAND_EXTINGUISH)),t.addKey(getKeyFromColor(COLOR_HUMAN_TYPE_DEAD)),t.addKey(getKeyFromColor(COLOR_HUMAN_TYPE_CIVILIAN)),t.addKey(getKeyFromColor(COLOR_HUMAN_TYPE_FIRE_BRIGADE)),t.addKey(getKeyFromColor(COLOR_COMMAND_RESCUE)),t.addKey(getKeyFromColor(COLOR_HUMAN_TYPE_AMBULANCE_TEAM)),t.addKey(getKeyFromColor(COLOR_HUMAN_TYPE_POLICE_FORCE)),t}function mirrorYs(t){return t.map((t,e)=>t*(e%2==1?-1:1))}function WorkerDataLoader(t,e=(()=>{})){this.getCycleObject=function(t){return this.cycles[t]},this.getCyclesNumber=function(){return this.cycles.length},this.releaseCycleMemory=function(t){delete this.cycles[t]},this.getInfoObject=function(){return this.info},this.checkForIcon=function(t){EntityHandler.getIcon(t)&&this.entitiesWithIcon.push(t)},this.fillAndPostInfo=function(t,e){t[0].lastCycle=t.length-2,postInfo(t[0])},this.createBaseCycle=function(t,e){this.minX=Number.MAX_SAFE_INTEGER,this.minY=Number.MAX_SAFE_INTEGER,this.maxX=Number.MIN_SAFE_INTEGER,this.maxY=Number.MIN_SAFE_INTEGER;let i=t[1],n={all:{},building:{},road:{},blockade:{},human:{}};for(let t=0;t<i.Entities.length;t++){let e=new Entity(i.Entities[t]);this.checkForIcon(e);let r=EntityHandler.getId(e);if(n.all[r]=e,EntityHandler.isHuman(e)?n.human[r]=e:EntityHandler.isBlockade(e)?n.blockade[r]=e:EntityHandler.isRoad(e)?n.road[r]=e:n.building[r]=e,EntityHandler.isSurface(e)){let t=EntityHandler.getVertices(e);for(let e=0;e<t.length;e+=2){let i=t[e],n=t[e+1];i<this.minX&&(this.minX=i),n<this.minY&&(this.minY=n),i>this.maxX&&(this.maxX=i),n>this.maxY&&(this.maxY=n)}}}postMapbounds(this.minX,this.minY,this.maxX,this.maxY),e("Map entities are loaded."),this.cycles=[n],this.postCycleAfterBake(0,n,i.Info,i.Commands)},this.fillCycle=function(t,e){let i=this.cycles.length-1,n=JSON.parse(JSON.stringify(this.getCycleObject(i)));n.road={};let r=e[t+1];for(let t in r.DeletedEntities){let e=r.DeletedEntities[t],i=n.all[e];EntityHandler.isHuman(i)?delete n.human[e]:EntityHandler.isBlockade(i)?delete n.blockade[e]:EntityHandler.isRoad(i)?delete n.road[e]:delete n.building[e],delete n.all[e]}for(let t in r.Entities){let e,i,s=r.Entities[t],o=EntityHandler.getId(s);o in n.all?(Object.assign(n.all[o],new Entity(s)),e=n.all[o],i=EntityHandler.getId(e)):(e=new Entity(s),i=EntityHandler.getId(e),n.all[i]=e),EntityHandler.isHuman(e)?n.human[i]=e:EntityHandler.isBlockade(e)?n.blockade[i]=e:EntityHandler.isRoad(e)?n.road[i]=e:n.building[i]=e}this.cycles.push(n),this.postCycleAfterBake(t,n,r.Info,r.Commands)},this.fillCycles=function(t,e){for(let e=1;e<t.length-1;e++)this.fillCycle(e,t);e("Game cycle entities are loaded.")},this.postCycleAfterBake=function(t,e,i,n){let r=new HistoryManager([this.baseHistorian.clone()]);r=this.fillHistoryWithCycleObject(r,e,t),r=this.fillHistoryWithCycleCommands(r,n,e),postCycleData(t,r.getActiveHistorian(),i)},this.fillHistoryWithCycleCommands=function(t,e=[],i){for(const n of e)this.fillHistoryWithCycleCommand(t,n,i);return t},this.fillHistoryWithCycleCommand=function(t,e,i){let n,r;switch(e.Name){case COMMAND_EXTINGUISH:n=parseInt(e.AgentId);let s=parseInt(e.Target);r=i.all[n][ENTITY_ATTR_POSITION];let o=EntityHandler.getCenterOfPolygon(i.all[s]);t.setColor(COLOR_COMMAND_EXTINGUISH[0],COLOR_COMMAND_EXTINGUISH[1],COLOR_COMMAND_EXTINGUISH[2],1),this.positionMaker.reset(),this.positionMaker.addLine(r[0],-r[1],o[0],-o[1],50),t.submitVanilla(this.positionMaker.getPositionsList());break;case COMMAND_CLEARAREA:n=parseInt(e.AgentId),r=i.all[n][ENTITY_ATTR_POSITION];let a=parseFloat(e.X),E=parseFloat(e.Y),_=[r[0],r[1]],l=[a,E],O=l[0]-_[0],I=l[1]-_[1],N=Math.sqrt(O*O+I*I),R=1e4;if(!(R>N)){let t=[O/N,I/N];l=[_[0]+t[0]*R,_[1]+t[1]*R],O=l[0]-_[0],I=l[1]-_[1],N=R}let C=2e3,c=[-I/N,O/N],A=[_[0]+c[0]*C,_[1]+c[1]*C],d=[_[0]-c[0]*C,_[1]-c[1]*C],T=[l[0]-c[0]*C,l[1]-c[1]*C],u=[l[0]+c[0]*C,l[1]+c[1]*C];t.setColor(COLOR_COMMAND_CLEARAREA[0],COLOR_COMMAND_CLEARAREA[1],COLOR_COMMAND_CLEARAREA[2],1),this.positionMaker.reset(),this.positionMaker.addClosedSequenceLine(mirrorYs([A[0],A[1],u[0],u[1],T[0],T[1],d[0],d[1]]),50),t.submitVanilla(this.positionMaker.getPositionsList());break;case COMMAND_RESCUE:n=parseInt(e.AgentId),r=i.all[n][ENTITY_ATTR_POSITION],this.positionMaker.reset();let y=mirrorYs(EntityHandler.getHumanVertices(r[0],r[1],1800,13));this.positionMaker.addPolygon(y),t.setColor(COLOR_COMMAND_RESCUE[0],COLOR_COMMAND_RESCUE[1],COLOR_COMMAND_RESCUE[2],1),t.submitVanilla(this.positionMaker.getPositionsList())}},this.fillHistoryWithCycleObject=function(t,e,i){if(0==i){let t=new HistoryManager([OrdinalHistorian()]),i=[];this.createLinesList(e.road,i),this.createLinesList(e.building,i),this.fillHistoryWithObject(t,e.road),this.fillBorderLines(t,i),postBaseData(t.getActiveHistorian())}return this.fillHistoryWithObject(t,e.building),this.fillHistoryWithObject(t,e.blockade),this.fillHistoryWithObject(t,e.human),this.fillHistoryWithHumanObjects(t,e.human),this.fillHistoryWithObjectIcons(t,this.entitiesWithIcon),t},this.fillHistoryWithHumanObjects=function(t,e){for(let i in e){let n=e[i],r=EntityHandler.getPositionHistory(n);if(r){this.positionMaker.reset();let e=mirrorYs(r);this.positionMaker.addSequenceLine(e,50);let i=COLOR_COMMAND_MOVEHISTORY;t.setColor(i[0],i[1],i[2],1),t.submitVanilla(this.positionMaker.getPositionsList())}}return t},this.fillHistoryWithObject=function(t,e){for(let i in e){let n=e[i];this.positionMaker.reset();let r=mirrorYs(EntityHandler.getVertices(n));this.positionMaker.addPolygon(r);let s=EntityHandler.getColor(n);t.setColor(s[0],s[1],s[2],1),t.submitVanilla(this.positionMaker.getPositionsList())}return t},this.fillHistoryWithObjectIcons=function(t,e){for(const i of e){let e=EntityHandler.getIcon(i),n=EntityHandler.getCenterOfPolygon(i);t.setTextureSlut(textures[e]),t.setTextureResolution(28e3,28e3),t.setTextureTranslation(n[0]-7e3,7e3-n[1]);let r=n[0]-7e3,s=n[1]-7e3,o=n[0]+7e3,a=n[1]+7e3;t.submitVanilla([r,-s,r,-a,o,-s,o,-s,r,-a,o,-a])}return t},this.createLinesList=function(t,e){for(let i in t){let n=t[i],r=mirrorYs(EntityHandler.getVertices(n));this.positionMaker.reset(),this.positionMaker.addClosedSequenceLine(r,50),Array.prototype.push.apply(e,this.positionMaker.getPositionsList())}},this.fillBorderLines=function(t,e){return t.setColor(COLOR_BORDER_DEFAULT[0],COLOR_BORDER_DEFAULT[1],COLOR_BORDER_DEFAULT[2],1),t.submitVanilla(e),t},this.consturctor=function(t,e){this.positionMaker=new PositionMaker,this.baseHistorian=OrdinalHistorian(),this.entitiesWithIcon=[],this.fillAndPostInfo(t,e),this.createBaseCycle(t,e),this.fillCycles(t,e,2)},this.consturctor(t,e)}EntityHandler.humans=["Civilian","Ambulance team","Fire brigade","Police force"],EntityHandler.surfaces=["Road","Building","Refuge","Blockade","Hydrant","Gas Station","Ambulance centre","Fire station","Police office"],EntityHandler.buildings=["Building","Refuge","Gas Station","Ambulance centre","Fire station","Police office"],EntityHandler.roads=["Road","Hydrant"],EntityHandler.blockades=["Blockade"],EntityHandler.getColor=function(t){return EntityColor.getColor(t)},EntityHandler.getType=function(t){return t.EntityName},EntityHandler.getHP=function(t){return t[ENTITY_ATTR_HP]},EntityHandler.getIcon=function(t){switch(this.getType(t)){case"Hydrant":return ICONS_HYDRANT;case"Police office":return ICONS_POLICE_OFFICE;case"Ambulance centre":return ICONS_AMBULANCE_CENTRE;case"Fire station":return ICONS_FIRE_STATION;case"Refuge":return ICONS_REFUGE;case"Gas Station":return ICONS_GAS_STATION}return!1},EntityHandler.isRoad=function(t){return this.roads.includes(this.getType(t))},EntityHandler.isHuman=function(t){return this.humans.includes(this.getType(t))},EntityHandler.isSurface=function(t){return this.surfaces.includes(this.getType(t))},EntityHandler.isBlockade=function(t){return this.blockades.includes(this.getType(t))},EntityHandler.isBuilding=function(t){return this.buildings.includes(this.getType(t))},EntityHandler.getId=function(t){return t.Id},EntityHandler.getPositionHistory=function(t){return t[ENTITY_ATTR_POSITIONHISTORY]},EntityHandler.getCenterOfPolygon=function(t){let e=t[ENTITY_ATTR_APEXES];if(e){let t=[0,0],i=e.length;for(let n=0;n<i;n++)t[n%2]+=e[n];return t[0]/=i/2,t[1]/=i/2,t}return!1},EntityHandler.getHumanVertices=function(t,e,i=1500,n=15){let r,s,o=2*Math.PI/n,a=[t+i*Math.cos(0),e+i*Math.sin(0)];for(let n=0;n<=2*Math.PI;n+=o)r=t+i*Math.cos(n),s=e+i*Math.sin(n),a.push(r,s);return a},EntityHandler.getVertices=function(t){if(this.isSurface(t))return t[ENTITY_ATTR_APEXES];if(this.isHuman(t)){let e,i=t[ENTITY_ATTR_POSITION];return e="Civilian"==this.getType(t)?1200:1500,this.getHumanVertices(i[0],i[1],e)}return[]},module={};var textures,ICONS_POLICE_OFFICE,ICONS_AMBULANCE_CENTRE,ICONS_FIRE_STATION,ICONS_REFUGE,ICONS_GAS_STATION,ICONS_HYDRANT,dataLoader={};function wl(t){console.log("WorkerLog: "+t)}function loadFunction(t,e=-1,i=!1){progressReport(t,e,i),wl(t)}function progressReport(t,e=-1,i=!1){postMessage({command:"progress_report",percent:e,text:t,end:i})}function postMapbounds(t,e,i,n){wl("map bounds sent"),postMessage({command:"map_bounds",minX:t,minY:e,maxX:i,maxY:n})}function postCycleData(t,e,i={}){wl("cycle "+t+" sent"),postMessage({command:"cycle_data",cycle:t,data:e.getDataCopy(),info:i})}function postBaseData(t){wl("Base data sent"),postMessage({command:"base_data",data:t.getDataCopy()})}function postInfo(t){wl("map info sent"),postMessage({command:"info",info:t})}function handleIncomingMassage(t){switch(t.data.command){case"import_script":let e=t.data.script;importScripts(e);break;case"load_data":textures=t.data.textures,dataLoader=new WorkerDataLoader(t.data.data,loadFunction);break;case"sync_icons":ICONS_POLICE_OFFICE=t.data.icons.po,ICONS_AMBULANCE_CENTRE=t.data.icons.ac,ICONS_FIRE_STATION=t.data.icons.fs,ICONS_REFUGE=t.data.icons.rf,ICONS_GAS_STATION=t.data.icons.gs,ICONS_HYDRANT=t.data.icons.hy}}onmessage=t=>handleIncomingMassage(t);
