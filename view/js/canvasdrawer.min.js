/*!
 * Canvas Drawer v0.1.0
 * Minimal WebGL-based 2D visualization library
 * https://github.com/amiraslanaslani/Canvas-Drawer
 * 
 * Released under the Apache license 2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Date: 2020-09-03T10:31:06.342Z (Thu, 03 Sep 2020 10:31:06 GMT)
 */
"use strict";function HistoryManager(t){this.historians=t,this.r=this.g=this.b=this.a=1,this.t_slut=0,this.t_resolution=[1,1],this.t_translation=[0,0],this.activeHistorian=0,this.getActiveHistorian=function(){return this.historians[this.activeHistorian]},this.setActiveHistorian=function(t){this.activeHistorian=t},this.getArrayOfHistorians=function(){return this.historians},this.setColor=function(t,i,e,s=1){let o=t+" "+i+" "+e+" "+s;this.getActiveHistorian().setKey(o)},this.updateTextureKey=function(){let t="#"+this.t_slut+":"+this.t_resolution[0]+":"+this.t_resolution[1]+":"+this.t_translation[0]+":"+this.t_translation[1];this.getActiveHistorian().setKey(t)},this.setTextureSlut=function(t){this.t_slut=t,this.updateTextureKey()},this.setTextureResolution=function(t,i){this.t_resolution=[t,i],this.updateTextureKey()},this.setTextureTranslation=function(t,i){this.t_translation=[t,i],this.updateTextureKey()},this.submitVanilla=function(t){this.getActiveHistorian().submitVanilla(t)},this.forget=function(){this.getArrayOfHistorians().map(t=>t.forget())},this.getKeys=function(){let t=[];for(const i of this.getArrayOfHistorians())for(const e of i.getKeys())t.push(e);return t},this.getMemo=function(){let t={};for(const i of this.getArrayOfHistorians()){let e=i.getMemo();for(const i in e){i in t||(t[i]=[]);for(const s of e[i])t[i].push(s)}}return t}}function Historian(){this.clone=function(){let t=new Historian;return t.keys=JSON.parse(JSON.stringify(this.keys)),t.memo=JSON.parse(JSON.stringify(this.memo)),t},this.getDataCopy=function(){let t={};return t.keys=JSON.parse(JSON.stringify(this.keys)),t.memo=JSON.parse(JSON.stringify(this.memo)),t},this.memo={},this.keys=[],this.key="-1",this.addKey=function(t){t in this.memo||(this.keys.push(t),this.memo[t]=[])},this.submit=function(t,i){this.addKey(i);for(const e of t)this.memo[i].push(e)},this.submitVanilla=function(t){this.submit(t,this.key)},this.setKey=function(t){this.key=t},this.forget=function(){this.memo={},this.key=[]},this.getMemo=function(){return this.memo},this.getKeys=function(){return this.keys}}function Cartographer(t,i,e=function(){return[0,0]},s=function(){return[0,0]},o=function(t,i){},n=function(t,i){},r=10){var a,h,l=$("#"+t),u=!1;l.css("cursor","grab");var c=[0,0],g=[0,0];l.on({mousemove:function(t){u&&function(t){let e=t.pageY-a,s=t.pageX-h;i(s,e,c[0],c[1],g[0],g[1])}(t)},mousedown:function(t){l.css("cursor","grabbing"),c=e(),g=s(),u=!0,a=t.pageY,h=t.pageX,l.scrollTop(),l.scrollLeft()},mouseleave:function(){u=!1,l.css("cursor","grab")},mouseup:function(){u=!1,l.css("cursor","grab")}});var f=!1;l.on("wheel mousewheel",(function(t){if(t.preventDefault(),f)return;f=!0;let i=l.offset(),e=[t.pageX-i.left,t.pageY-i.top];setTimeout(()=>{f=!1},r),t.originalEvent.deltaY>0?n(e[0],e[1]):t.originalEvent.deltaY<0&&o(e[0],e[1])}))}function Drawer(t,i){this.vertexShaderSource="\n        attribute vec2 a_position;\n        uniform vec2 u_resolution;\n        uniform vec2 u_scale;\n        uniform vec2 u_translation;\n\n        void main() {\n            vec2 scaledPosition = a_position * u_scale;\n            vec2 position = scaledPosition + u_translation;\n            \n            vec2 zeroToOne = position / u_resolution;\n            vec2 zeroToTwo = zeroToOne * 2.0;\n            vec2 clipSpace = zeroToTwo - 1.0;\n            clipSpace = clipSpace * vec2(1, -1);\n            gl_Position = vec4(clipSpace, 0, 1);\n        }\n    ",this.fragmentShaderSource="\n        precision mediump float;\n        uniform vec4 u_color;\n        uniform sampler2D tex;\n        \n        uniform vec2 u_tex_resolution;\n        uniform vec2 u_tex_translation;\n\n        uniform int u_color_texture_flag;\n\n        vec4  useColor(){\n            return u_color;\n        }\n\n        vec4 useTexture(){\n            mediump vec2 coord = vec2(gl_FragCoord.x, gl_FragCoord.y);\n            vec2 position = vec2(coord.x - u_tex_translation.x, coord.y + u_tex_translation.y);\n            vec2 zeroToOne = position / u_tex_resolution;\n            vec2 zeroToTwo = zeroToOne * 2.0;\n            vec2 clipSpace = zeroToTwo - 1.0;\n            clipSpace = clipSpace * vec2(1, -1);\n            mediump vec4 sample = texture2D(tex, clipSpace);\n            return sample;\n        }\n\n        void main() {\n            if(u_color_texture_flag == 0){\n                gl_FragColor = useColor();\n            }\n            else{\n                gl_FragColor = useTexture();\n            }\n        }\n    ",this.getMaximumTextureUnits=function(){return this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)},this.setActiveTextureUnit=function(t){if(t<0||t>=this.getMaximumTextureUnits())return!1;let i=this.gl.TEXTURE0+t;return this.gl.activeTexture(i),!0},this.setTexture=function(t,i,e=this.gl.RGBA,s=this.gl.RGBA){this.setActiveTextureUnit(i);let o=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,o),this.gl.texImage2D(this.gl.TEXTURE_2D,0,e,s,this.gl.UNSIGNED_BYTE,t),this.gl.generateMipmap(this.gl.TEXTURE_2D),console.log("Texture is loaded to TEXTURE"+i)},this.setUseTexture=function(t){this.activeTexture=t,this.historyManager.setTextureSlut(this.activeTexture),this.gl.uniform1i(this.textureLocation,t)},this.setColorEnable=function(){this.historyManager.setColor(this.color[0],this.color[1],this.color[2],this.color[3]),this.gl.uniform1i(this.colorTextureFlag,0)},this.setTextureEnable=function(){this.historyManager.setTextureSlut(this.activeTexture),this.gl.uniform1i(this.colorTextureFlag,1)},this.setColor=function(t,i,e,s=1){this.setColorVanilla(t,i,e,s),this.historyManager.setColor(t,i,e,s)},this.setColorVanilla=function(t,i,e,s){this.color=[t,i,e,s],this.gl.uniform4f(this.colorUniformLocation,t,i,e,s)},this.setPositions=function(t){this.setPositionsVanilla(t),this.historyManager.submitVanilla(t)},this.setPositionsVanilla=function(t){this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(t),this.gl.STATIC_DRAW)},this.justDraw=function(t){this.setPositions(t),this.drawFromBuffer(t.length/2)},this.draw=function(t,i,e,s,o){this.setColor(i,e,s,o),this.setPositions(t),this.drawFromBuffer(t.length/2)},this.drawFromBuffer=function(t){var i=this.gl.TRIANGLES;this.gl.drawArrays(i,0,t)},this.clear=function(t,i,e,s){this.gl.clearColor(t,i,e,s),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.historyManager.forget()},this.setScale=function(t){this.scale=[t,t],this.gl.uniform2fv(this.scaleLocation,this.scale)},this.updateScale=function(t){this.setScale(t),this.redraw()},this.setTranslation=function(t,i){this.translation=[t,i],this.gl.uniform2fv(this.translationLocation,this.translation)},this.updateTextureScale=function(t){this.setTextureScale(t),this.redraw()},this.setTextureScale=function(t){this.texScale=[t,t],this.updateTextureValues()},this.updateTextureValues=function(){this.setBaseTextureTranslation(0,-this.gl.canvas.height%(this.texResolution[1]*this.texScale[1])),this.setShaderTextureResolution(this.texScale[0]*this.texResolution[0],this.texScale[1]*this.texResolution[1])},this.setTextureResolution=function(t,i){this.setTextureResolutionVanilla(t,i),this.historyManager.setTextureResolution(t,i)},this.setTextureResolutionVanilla=function(t,i){this.texResolution=[t,i],this.updateTextureValues()},this.setShaderTextureResolution=function(t,i){this.gl.uniform2f(this.textureResolutionUniformLocation,t,i)},this.setTextureTranslationFromValuesToShader=function(){this.gl.uniform2fv(this.textureTranslationLocation,[this.texTranslation[0]+this.baseTextureTranslation[0]+this.textureUserTranslation[0],this.texTranslation[1]+this.baseTextureTranslation[1]+this.textureUserTranslation[1]])},this.setBaseTextureTranslation=function(t,i){this.baseTextureTranslation=[t,i],this.setTextureTranslation(this.texTranslation[0],this.texTranslation[1])},this.setTextureUserTranslation=function(t,i){this.historyManager.setTextureTranslation(t,i),this.textureUserTranslation=[t,i]},this.setTextureTranslation=function(t,i){this.setTextureTranslationVanilla(t,i)},this.setTextureTranslationVanilla=function(t,i){this.texTranslation=[t,i],this.setTextureTranslationFromValuesToShader()},this.updateTranslation=function(t,i){this.setTranslation(t,i),this.redraw()},this.repeatTheHistory=function(){let t=this.historyManager.getKeys(),i=this.historyManager.getMemo();for(let e=0;e<t.length;e++){let s=t[e];if("#"==s.charAt(0)){let t=s.substring(1);t=t.split(":"),this.setTextureEnable();for(let i=0;i<t.length;i++)t[i]=parseInt(t[i]);this.setUseTexture(t[0]),this.setTextureResolutionVanilla(t[1],t[2]),this.textureUserTranslation=[t[3]*this.texScale[0],t[4]*this.texScale[1]],this.setTextureTranslationFromValuesToShader()}else{this.setColorEnable();let t=s.split(" ");this.setColor(t[0],t[1],t[2],t[3])}let o=i[s];this.setPositionsVanilla(o),this.drawFromBuffer(o.length/2)}},this.redraw=function(){this.repeatTheHistory()},this.updateScaleIntoPoint=function(t,i,e){let s=t/this.scale[0];this.setScale(t),this.setTextureScale(t),this.setTextureTranslation(s*this.texTranslation[0]+i-s*i,s*this.texTranslation[1]+e-s*e),this.setTranslation(s*this.translation[0]+i-s*i,s*this.translation[1]+e-s*e),this.redraw()},this.createShader=function(t,i){var e=this.gl.createShader(t);if(this.gl.shaderSource(e,i),this.gl.compileShader(e),this.gl.getShaderParameter(e,this.gl.COMPILE_STATUS))return e;console.log(this.gl.getShaderInfoLog(e)),this.gl.deleteShader(e)},this.createProgram=function(t,i){var e=this.gl.createProgram();if(this.gl.attachShader(e,t),this.gl.attachShader(e,i),this.gl.linkProgram(e),this.gl.getProgramParameter(e,this.gl.LINK_STATUS))return e;console.log(this.gl.getProgramInfoLog(e)),this.gl.deleteProgram(e)},this.enableBlending=function(t=this.gl.SRC_ALPHA,i=this.gl.ONE_MINUS_SRC_ALPHA,e=this.gl.FUNC_ADD){this.gl.enable(this.gl.BLEND),this.gl.blendEquation(e),this.gl.blendFunc(t,i)},this.disableTextureBlending=function(){this.gl.disable(this.gl.BLEND)},this.refitWebglToCanvas=function(){let t=this.gl.canvas.width,i=this.gl.canvas.height;this.gl.viewport(0,0,t,i),this.gl.uniform2f(this.resolutionUniformLocation,t,i),this.redraw()},this.setup=function(){var t=this.vertexShaderSource,i=this.fragmentShaderSource,e=this.createShader(this.gl.VERTEX_SHADER,t),s=this.createShader(this.gl.FRAGMENT_SHADER,i);this.program=this.createProgram(e,s),this.gl.useProgram(this.program),this.positionAttributeLocation=this.gl.getAttribLocation(this.program,"a_position"),this.resolutionUniformLocation=this.gl.getUniformLocation(this.program,"u_resolution"),this.colorUniformLocation=this.gl.getUniformLocation(this.program,"u_color"),this.scaleLocation=this.gl.getUniformLocation(this.program,"u_scale"),this.translationLocation=this.gl.getUniformLocation(this.program,"u_translation"),this.textureLocation=this.gl.getUniformLocation(this.program,"tex"),this.textureResolutionUniformLocation=this.gl.getUniformLocation(this.program,"u_tex_resolution"),this.textureTranslationLocation=this.gl.getUniformLocation(this.program,"u_tex_translation"),this.colorTextureFlag=this.gl.getUniformLocation(this.program,"u_color_texture_flag"),this.clear(0,0,0,0),this.gl.uniform2fv(this.scaleLocation,this.scale),this.gl.uniform2fv(this.translationLocation,this.translation),this.gl.uniform2fv(this.textureTranslationLocation,this.texTranslation),this.gl.uniform1i(this.colorTextureFlag,0),this.positionBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer),this.gl.enableVertexAttribArray(this.positionAttributeLocation);var o=this.gl.FLOAT;this.gl.vertexAttribPointer(this.positionAttributeLocation,2,o,!1,0,0),this.gl.uniform2f(this.textureResolutionUniformLocation,this.gl.canvas.width,this.gl.canvas.height),this.texResolution=[this.gl.canvas.width,this.gl.canvas.height],this.baseTextureTranslation=[0,-this.gl.canvas.height%(this.texResolution[1]*this.texScale[1])],this.refitWebglToCanvas()},this.constructor=function(t,i){this.historyManager=new HistoryManager([new Historian]),this.activeTextureUnit=-1,this.color=[0,0,0,1],this.activeTexture=0,this.scale=[1,1],this.texScale=[1,1],this.texResolution=[0,0],this.baseTextureTranslation=[0,0],this.textureUserTranslation=[0,0],this.translation=[0,0],this.texTranslation=[0,0];var e=document.getElementById(t);this.gl=e.getContext("webgl"),this.gl?this.setup():i()},this.constructor(t,i)}function PositionMaker(){this.reset=function(){this.positions=[]},this.addPolygon=function(t){let i=earcut(t);for(let e=0;e<i.length;e++)this.positions.push(t[2*i[e]],t[2*i[e]+1])},this.addLine=function(t,i,e,s,o){let n=e-t,r=s-i,a=Math.sqrt(n*n+r*r),h=[-r/a,n/a],l=[t,i],u=[e,s],c=[l[0]+h[0]*o,l[1]+h[1]*o],g=[l[0]-h[0]*o,l[1]-h[1]*o],f=[u[0]-h[0]*o,u[1]-h[1]*o],T=[u[0]+h[0]*o,u[1]+h[1]*o];this.positions.push(c[0],c[1],g[0],g[1],f[0],f[1],f[0],f[1],T[0],T[1],c[0],c[1])},this.addCircle=function(t,i,e,s=15){let o,n,r=2*Math.PI/s,a=t+e*Math.cos(0),h=i+e*Math.sin(0);for(let s=0;s<=2*Math.PI;s+=r)o=t+e*Math.cos(s),n=i+e*Math.sin(s),this.positions.push(t,i,a,h,o,n),a=o,h=n},this.addRectangle=function(t,i,e,s){this.positions.push(t,i,t,s,e,i,e,i,t,s,e,s)},this.addSequenceLine=function(t,i){for(let e=0;e<t.length/2-1;e++)this.addLine(t[2*e],t[2*e+1],t[2*e+2],t[2*e+3],i)},this.addClosedSequenceLine=function(t,i){let e=t.length;this.addSequenceLine(t,i),this.addLine(t[0],t[1],t[e-2],t[e-1],i)},this.getPositionsList=function(){return this.positions},this.positions=[]}function CanvasDrawer(t){this.loadDataFromInfo=function(t,i){return t in this.info?this.info[t]:i},this.draw=function(t,i,e,s){this.drawer.draw(this.positionMaker.positions,t,i,e,s),this.positionMaker.reset()},this.justDraw=function(){this.drawer.justDraw(this.positionMaker.positions),this.positionMaker.reset()},this.loadTexture=function(t,i,e,s){this.drawer.setTexture(t,i,e,s)},this.imagesLoadTexture=function(t,i=(t=>{})){var e=0,s=[],o=this.drawer.getMaximumTextureUnits();t.forEach(async t=>{let i=e;e++,s[t.idName]=i>=o?-1:i,this.loadTexture(t,i)}),i(s)},this.loadTextures=function(t,i=(()=>{})){var e=0,s=t.length,o=[],n=t=>{this.imagesLoadTexture(t,i)};t.forEach(t=>{let i=new Image;i.idName=t,o.push(i),i.onload=()=>{++e==s&&n(o)},i.src=t})},this.constructor=function(t){this.info=t;var i=this.loadDataFromInfo("id",!1),e=this.loadDataFromInfo("error",(function(){})),s=this.loadDataFromInfo("cartographer",!1),o=this.loadDataFromInfo("zoominrate",1.1),n=this.loadDataFromInfo("zoomoutrate",.9),r=this.loadDataFromInfo("zoompreventtime",10);if(!1!==i){if(this.drawer=new Drawer(i,e),s){let t=this.drawer;this.cartographer=new Cartographer(i,(function(i,e,s,o,n,r){t.setTextureTranslation(n+i,r+e),t.updateTranslation(s+i,o+e)}),(function(){return t.translation}),(function(){return t.texTranslation}),(function(i,e){let s=t.scale[0];t.updateScaleIntoPoint(s*o,i,e)}),(function(i,e){let s=t.scale[0];t.updateScaleIntoPoint(s*n,i,e)}),r)}this.positionMaker=new PositionMaker}else console.log("CanvasDrawer can not found element with id that you pass or maybe you don't pass any id!")},this.constructor(t),this.addPolygon=t=>this.positionMaker.addPolygon(t),this.addLine=(t,i,e,s,o)=>this.positionMaker.addLine(t,i,e,s,o),this.addCircle=(t,i,e,s=15)=>this.positionMaker.addCircle(t,i,e,15),this.addSequenceLine=(t,i)=>this.positionMaker.addSequenceLine(t,i),this.addClosedSequenceLine=(t,i)=>this.positionMaker.addClosedSequenceLine(t,i)}